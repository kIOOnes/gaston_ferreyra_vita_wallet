{"name": "test_login[user0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\pc\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\n    at AndroidUiautomator2Driver.findElement (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)", "trace": "driver = <appium.webdriver.webdriver.WebDriver (session=\"2fc9d60e-c315-429b-ad5f-bb354f4e4fb8\")>\nuser = {'email': 'derly+qa02@vitawallet.io', 'password': 'vitawallet'}\n\n    @pytest.mark.parametrize(\"user\", UserData(\"data/users.csv\").get_users())\n    def test_login(driver, user):\n    \n    \n        # -------------------------\n        # A-A-A DESIGN PATTERN\n        # Arrange\n        # -------------------------\n        login_page = LoginPage(driver)\n    \n        # -------------------------\n        # Act\n        # -------------------------\n        login_page.login(user[\"email\"], user[\"password\"])\n    \n        # -------------------------\n        # Assert\n        # -------------------------\n        #welcome_text_locator = ('xpath', '//android.widget.TextView[@text=\"Welcome\"]')\n        #assert login_page.el.find_element(welcome_text_locator).is_displayed(), \"Login failed for user: {}\".format(user[\"email\"])\n    \n        home_page = HomePage(driver)\n        home_page.quit_pop_up(driver)\n        home_page.go_crypto(driver)\n    \n        crypto_buy_page = CryptoBuyPage(driver)\n        crypto_buy_page.select_crypto_to_sell(driver)\n        crypto_buy_page.enter_amount_to_sell(driver,1919)\n>       crypto_buy_page.select_crypto_to_buy(driver)\n\ntests\\test_sample.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\crypto\\crypto_buy_page.py:36: in select_crypto_to_buy\n    self.elm.click(USDT_SELECT)\ncore\\elements.py:17: in click\n    self.find_element(by_tuple, value).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ncore\\elements.py:14: in find_element\n    return self.wait.until(EC.presence_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2fc9d60e-c315-429b-ad5f-bb354f4e4fb8\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000018B16BA7740>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\pc\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\nE           at processTicksAndRejections (node:internal/process/task_queues:105:5)\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\nE           at AndroidUiautomator2Driver.findElement (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "parameters": [{"name": "user", "value": "{'email': 'derly+qa02@vitawallet.io', 'password': 'vitawallet'}"}], "start": 1759541899817, "stop": 1759541938869, "uuid": "8ff1eb71-d468-403a-90f9-c6825e37dbfd", "historyId": "cb43fbe24d4c7dde0fd229d0182b8b9e", "testCaseId": "851f638a1293a2d1aa1b69497a224bb7", "fullName": "tests.test_sample#test_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_sample"}, {"name": "host", "value": "DESKTOP-USD8UUS"}, {"name": "thread", "value": "17172-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_sample"}], "titlePath": ["tests", "test_sample.py"]}