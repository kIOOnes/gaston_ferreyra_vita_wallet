{"name": "test_login[user0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.UnknownMethodException: Message: Unsupported execute method 'mobile: tap', did you mean 'mobile: type'? Make sure the installed AndroidUiautomator2Driver is up-to-date. Execute methods available in the current driver version are: mobile: type, mobile: nfc, mobile: lock, mobile: shell, mobile: listSms, mobile: clearApp, mobile: unlock, mobile: gsmCall, mobile: scroll, mobile: installApp, mobile: toggleGps, mobile: statusBar, mobile: sendSms, mobile: powerAc, mobile: deepLink, mobile: pushFile, mobile: pullFile, mobile: activateApp, mobile: removeApp, mobile: broadcast, mobile: isLocked, mobile: bluetooth, mobile: setUiMode, mobile: getUiMode, mobile: gsmSignal, mobile: gsmVoice, mobile: pressKey, mobile: deleteFile, mobile: terminateApp, mobile: stopService, mobile: sensorSet, mobile: pullFolder, mobile: startService, mobile: getContexts, mobile: deviceidle, mobile: fingerprint, mobile: networkSpeed, mobile: dragGesture, mobile: acceptAlert, mobile: batteryInfo, mobile: deviceInfo, mobile: setClipboard, mobile: getClipboard, mobile: queryAppState, mobile: backgroundApp, mobile: startActivity, mobile: hideKeyboard, mobile: isGpsEnabled, mobile: getSystemBars, mobile: powerCapacity, mobile: getAppStrings, mobile: flingGesture, mobile: clickGesture, mobile: swipeGesture, mobile: scrollBackTo, mobile: viewportRect, mobile: screenshots, mobile: getDeviceTime, mobile: isAppInstalled, mobile: setGeolocation, mobile: getGeolocation, mobile: scrollGesture, mobile: dismissAlert, mobile: getPermissions, mobile: scheduleAction, mobile: getNotifications, mobile: refreshGpsCache, mobile: getConnectivity, mobile: setConnectivity, mobile: isKeyboardShown, mobile: sendTrimMemory, mobile: resetGeolocation, mobile: stopLogsBroadcast, mobile: getDisplayDensity, mobile: getCurrentPackage, mobile: longClickGesture, mobile: pinchOpenGesture, mobile: openNotifications, mobile: getActionHistory, mobile: unscheduleAction, mobile: startLogsBroadcast, mobile: changePermissions, mobile: getPerformanceData, mobile: pinchCloseGesture, mobile: installMultipleApks, mobile: stopScreenStreaming, mobile: getCurrentActivity, mobile: doubleClickGesture, mobile: viewportScreenshot, mobile: replaceElementValue, mobile: performEditorAction, mobile: startScreenStreaming, mobile: execEmuConsoleCommand, mobile: getPerformanceDataTypes, mobile: injectEmulatorCameraImage, mobile: stopMediaProjectionRecording, mobile: startMediaProjectionRecording, mobile: isMediaProjectionRecordingRunning\nStacktrace:\nUnsupportedOperationError: Unsupported execute method 'mobile: tap', did you mean 'mobile: type'? Make sure the installed AndroidUiautomator2Driver is up-to-date. Execute methods available in the current driver version are: mobile: type, mobile: nfc, mobile: lock, mobile: shell, mobile: listSms, mobile: clearApp, mobile: unlock, mobile: gsmCall, mobile: scroll, mobile: installApp, mobile: toggleGps, mobile: statusBar, mobile: sendSms, mobile: powerAc, mobile: deepLink, mobile: pushFile, mobile: pullFile, mobile: activateApp, mobile: removeApp, mobile: broadcast, mobile: isLocked, mobile: bluetooth, mobile: setUiMode, mobile: getUiMode, mobile: gsmSignal, mobile: gsmVoice, mobile: pressKey, mobile: deleteFile, mobile: terminateApp, mobile: stopService, mobile: sensorSet, mobile: pullFolder, mobile: startService, mobile: getContexts, mobile: deviceidle, mobile: fingerprint, mobile: networkSpeed, mobile: dragGesture, mobile: acceptAlert, mobile: batteryInfo, mobile: deviceInfo, mobile: setClipboard, mobile: getClipboard, mobile: queryAppState, mobile: backgroundApp, mobile: startActivity, mobile: hideKeyboard, mobile: isGpsEnabled, mobile: getSystemBars, mobile: powerCapacity, mobile: getAppStrings, mobile: flingGesture, mobile: clickGesture, mobile: swipeGesture, mobile: scrollBackTo, mobile: viewportRect, mobile: screenshots, mobile: getDeviceTime, mobile: isAppInstalled, mobile: setGeolocation, mobile: getGeolocation, mobile: scrollGesture, mobile: dismissAlert, mobile: getPermissions, mobile: scheduleAction, mobile: getNotifications, mobile: refreshGpsCache, mobile: getConnectivity, mobile: setConnectivity, mobile: isKeyboardShown, mobile: sendTrimMemory, mobile: resetGeolocation, mobile: stopLogsBroadcast, mobile: getDisplayDensity, mobile: getCurrentPackage, mobile: longClickGesture, mobile: pinchOpenGesture, mobile: openNotifications, mobile: getActionHistory, mobile: unscheduleAction, mobile: startLogsBroadcast, mobile: changePermissions, mobile: getPerformanceData, mobile: pinchCloseGesture, mobile: installMultipleApks, mobile: stopScreenStreaming, mobile: getCurrentActivity, mobile: doubleClickGesture, mobile: viewportScreenshot, mobile: replaceElementValue, mobile: performEditorAction, mobile: startScreenStreaming, mobile: execEmuConsoleCommand, mobile: getPerformanceDataTypes, mobile: injectEmulatorCameraImage, mobile: stopMediaProjectionRecording, mobile: startMediaProjectionRecording, mobile: isMediaProjectionRecordingRunning\n    at AndroidUiautomator2Driver.executeMethod (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\execute.ts:52:13)\n    at AndroidUiautomator2Driver.execute (C:\\Users\\pc\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\execute.js:17:23)\n    at runCommandPromise (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:116:20)\n    at C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\async-lock\\lib\\index.js:171:12\n    at AsyncLock._promiseTry (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\async-lock\\lib\\index.js:306:31)\n    at exec (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\async-lock\\lib\\index.js:170:9)\n    at AsyncLock.acquire (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\async-lock\\lib\\index.js:189:3)\n    at AndroidUiautomator2Driver.executeCommand (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:160:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at defaultBehavior (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\lib\\appium.js:730:14)\n    at AppiumDriver.executeWrappedCommand (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\lib\\appium.js:843:16)\n    at AppiumDriver.executeCommand (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\lib\\appium.js:742:17)\n    at asyncHandler (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.ts:409:19)", "trace": "driver = <appium.webdriver.webdriver.WebDriver (session=\"1d81de96-e794-45fc-8d4c-e39e96c731b9\")>\nuser = {'email': 'derly+qa02@vitawallet.io', 'password': 'vitawallet'}\n\n    @pytest.mark.parametrize(\"user\", UserData(\"data/users.csv\").get_users())\n    def test_login(driver, user):\n    \n    \n        # -------------------------\n        # A-A-A DESIGN PATTERN\n        # Arrange 1\n        # -------------------------\n        login_page = LoginPage(driver)\n    \n        # -------------------------\n        # Act 2\n        # -------------------------\n        login_page.login(user[\"email\"], user[\"password\"])\n    \n        # -------------------------\n        # Assert 3\n        # -------------------------\n        #welcome_text_locator = ('xpath', '//android.widget.TextView[@text=\"Welcome\"]')\n        #assert login_page.el.find_element(welcome_text_locator).is_displayed(), \"Login failed for user: {}\".format(user[\"email\"])\n    \n        home_page = HomePage(driver)\n        home_page.quit_pop_up(driver)\n>       home_page.go_crypto(driver)\n\ntests\\test_sample.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\home\\home_page.py:29: in go_crypto\n    Gestures.tap(driver, 109, 2258)\ncore\\gestures.py:13: in tap\n    driver.execute_script(\"mobile: tap\", {\"x\": x, \"y\": y})\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:555: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x00000272B867B8C0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unsupported operation\",\"message\":\"Unsupported execute method \\'mobile: ta...\\npm\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\@appium\\\\\\\\base-driver\\\\\\\\lib\\\\\\\\protocol\\\\\\\\protocol.ts:409:19)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        https://www.w3.org/TR/webdriver/#errors\n        \"\"\"\n        payload = response.get('value', '')\n        if isinstance(payload, dict):\n            payload_dict = payload\n        else:\n            try:\n                payload_dict = json.loads(payload)\n            except (json.JSONDecodeError, TypeError):\n                return\n            if not isinstance(payload_dict, dict):\n                return\n        value = payload_dict.get('value')\n        if not isinstance(value, dict):\n            return\n        error = value.get('error')\n        if not error:\n            return\n    \n        message = value.get('message', error)\n        stacktrace = value.get('stacktrace', '')\n        # In theory, we should also be checking HTTP status codes.\n        # Java client, for example, prints a warning if the actual `error`\n        # value does not match to the response's HTTP status code.\n        exception_class: Type[sel_exceptions.WebDriverException] = ERROR_TO_EXC_MAPPING.get(\n            error, sel_exceptions.WebDriverException\n        )\n        if exception_class is sel_exceptions.WebDriverException and message:\n            if message == 'No such context found.':\n                exception_class = appium_exceptions.NoSuchContextException\n            elif message == 'That command could not be executed in the current context.':\n                exception_class = appium_exceptions.InvalidSwitchToTargetException\n    \n        if exception_class is sel_exceptions.UnexpectedAlertPresentException:\n            raise sel_exceptions.UnexpectedAlertPresentException(\n                msg=message,\n                stacktrace=format_stacktrace(stacktrace),\n                alert_text=value.get('data'),\n            )\n>       raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\nE       selenium.common.exceptions.UnknownMethodException: Message: Unsupported execute method 'mobile: tap', did you mean 'mobile: type'? Make sure the installed AndroidUiautomator2Driver is up-to-date. Execute methods available in the current driver version are: mobile: type, mobile: nfc, mobile: lock, mobile: shell, mobile: listSms, mobile: clearApp, mobile: unlock, mobile: gsmCall, mobile: scroll, mobile: installApp, mobile: toggleGps, mobile: statusBar, mobile: sendSms, mobile: powerAc, mobile: deepLink, mobile: pushFile, mobile: pullFile, mobile: activateApp, mobile: removeApp, mobile: broadcast, mobile: isLocked, mobile: bluetooth, mobile: setUiMode, mobile: getUiMode, mobile: gsmSignal, mobile: gsmVoice, mobile: pressKey, mobile: deleteFile, mobile: terminateApp, mobile: stopService, mobile: sensorSet, mobile: pullFolder, mobile: startService, mobile: getContexts, mobile: deviceidle, mobile: fingerprint, mobile: networkSpeed, mobile: dragGesture, mobile: acceptAlert, mobile: batteryInfo, mobile: deviceInfo, mobile: setClipboard, mobile: getClipboard, mobile: queryAppState, mobile: backgroundApp, mobile: startActivity, mobile: hideKeyboard, mobile: isGpsEnabled, mobile: getSystemBars, mobile: powerCapacity, mobile: getAppStrings, mobile: flingGesture, mobile: clickGesture, mobile: swipeGesture, mobile: scrollBackTo, mobile: viewportRect, mobile: screenshots, mobile: getDeviceTime, mobile: isAppInstalled, mobile: setGeolocation, mobile: getGeolocation, mobile: scrollGesture, mobile: dismissAlert, mobile: getPermissions, mobile: scheduleAction, mobile: getNotifications, mobile: refreshGpsCache, mobile: getConnectivity, mobile: setConnectivity, mobile: isKeyboardShown, mobile: sendTrimMemory, mobile: resetGeolocation, mobile: stopLogsBroadcast, mobile: getDisplayDensity, mobile: getCurrentPackage, mobile: longClickGesture, mobile: pinchOpenGesture, mobile: openNotifications, mobile: getActionHistory, mobile: unscheduleAction, mobile: startLogsBroadcast, mobile: changePermissions, mobile: getPerformanceData, mobile: pinchCloseGesture, mobile: installMultipleApks, mobile: stopScreenStreaming, mobile: getCurrentActivity, mobile: doubleClickGesture, mobile: viewportScreenshot, mobile: replaceElementValue, mobile: performEditorAction, mobile: startScreenStreaming, mobile: execEmuConsoleCommand, mobile: getPerformanceDataTypes, mobile: injectEmulatorCameraImage, mobile: stopMediaProjectionRecording, mobile: startMediaProjectionRecording, mobile: isMediaProjectionRecordingRunning\nE       Stacktrace:\nE       UnsupportedOperationError: Unsupported execute method 'mobile: tap', did you mean 'mobile: type'? Make sure the installed AndroidUiautomator2Driver is up-to-date. Execute methods available in the current driver version are: mobile: type, mobile: nfc, mobile: lock, mobile: shell, mobile: listSms, mobile: clearApp, mobile: unlock, mobile: gsmCall, mobile: scroll, mobile: installApp, mobile: toggleGps, mobile: statusBar, mobile: sendSms, mobile: powerAc, mobile: deepLink, mobile: pushFile, mobile: pullFile, mobile: activateApp, mobile: removeApp, mobile: broadcast, mobile: isLocked, mobile: bluetooth, mobile: setUiMode, mobile: getUiMode, mobile: gsmSignal, mobile: gsmVoice, mobile: pressKey, mobile: deleteFile, mobile: terminateApp, mobile: stopService, mobile: sensorSet, mobile: pullFolder, mobile: startService, mobile: getContexts, mobile: deviceidle, mobile: fingerprint, mobile: networkSpeed, mobile: dragGesture, mobile: acceptAlert, mobile: batteryInfo, mobile: deviceInfo, mobile: setClipboard, mobile: getClipboard, mobile: queryAppState, mobile: backgroundApp, mobile: startActivity, mobile: hideKeyboard, mobile: isGpsEnabled, mobile: getSystemBars, mobile: powerCapacity, mobile: getAppStrings, mobile: flingGesture, mobile: clickGesture, mobile: swipeGesture, mobile: scrollBackTo, mobile: viewportRect, mobile: screenshots, mobile: getDeviceTime, mobile: isAppInstalled, mobile: setGeolocation, mobile: getGeolocation, mobile: scrollGesture, mobile: dismissAlert, mobile: getPermissions, mobile: scheduleAction, mobile: getNotifications, mobile: refreshGpsCache, mobile: getConnectivity, mobile: setConnectivity, mobile: isKeyboardShown, mobile: sendTrimMemory, mobile: resetGeolocation, mobile: stopLogsBroadcast, mobile: getDisplayDensity, mobile: getCurrentPackage, mobile: longClickGesture, mobile: pinchOpenGesture, mobile: openNotifications, mobile: getActionHistory, mobile: unscheduleAction, mobile: startLogsBroadcast, mobile: changePermissions, mobile: getPerformanceData, mobile: pinchCloseGesture, mobile: installMultipleApks, mobile: stopScreenStreaming, mobile: getCurrentActivity, mobile: doubleClickGesture, mobile: viewportScreenshot, mobile: replaceElementValue, mobile: performEditorAction, mobile: startScreenStreaming, mobile: execEmuConsoleCommand, mobile: getPerformanceDataTypes, mobile: injectEmulatorCameraImage, mobile: stopMediaProjectionRecording, mobile: startMediaProjectionRecording, mobile: isMediaProjectionRecordingRunning\nE           at AndroidUiautomator2Driver.executeMethod (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\execute.ts:52:13)\nE           at AndroidUiautomator2Driver.execute (C:\\Users\\pc\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\execute.js:17:23)\nE           at runCommandPromise (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:116:20)\nE           at C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\async-lock\\lib\\index.js:171:12\nE           at AsyncLock._promiseTry (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\async-lock\\lib\\index.js:306:31)\nE           at exec (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\async-lock\\lib\\index.js:170:9)\nE           at AsyncLock.acquire (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\async-lock\\lib\\index.js:189:3)\nE           at AndroidUiautomator2Driver.executeCommand (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\driver.ts:160:39)\nE           at processTicksAndRejections (node:internal/process/task_queues:105:5)\nE           at defaultBehavior (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\lib\\appium.js:730:14)\nE           at AppiumDriver.executeWrappedCommand (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\lib\\appium.js:843:16)\nE           at AppiumDriver.executeCommand (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\lib\\appium.js:742:17)\nE           at asyncHandler (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.ts:409:19)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:125: UnknownMethodException"}, "parameters": [{"name": "user", "value": "{'email': 'derly+qa02@vitawallet.io', 'password': 'vitawallet'}"}], "start": 1759534425927, "stop": 1759534439463, "uuid": "cb1e3b63-ebd5-4f32-838e-4759e604363c", "historyId": "cb43fbe24d4c7dde0fd229d0182b8b9e", "testCaseId": "851f638a1293a2d1aa1b69497a224bb7", "fullName": "tests.test_sample#test_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_sample"}, {"name": "host", "value": "DESKTOP-USD8UUS"}, {"name": "thread", "value": "22284-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_sample"}], "titlePath": ["tests", "test_sample.py"]}