{"name": "test_login[user0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource.\nStacktrace:\nUnknownCommandError: The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource.\n    at catch404Handler (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\express\\middleware.js:139:49)\n    at Layer.handleRequest (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:295:15\n    at param (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:600:14)\n    at param (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:610:14)\n    at processParams (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:664:3)\n    at next (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:291:5)\n    at logger (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\morgan\\index.js:144:5)\n    at Layer.handleRequest (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\lib\\layer.js:152:17)\n    at trimPrefix (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:342:13)\n    at C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:291:5)\n    at C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\body-parser\\lib\\read.js:132:5\n    at AsyncResource.runInAsyncScope (node:async_hooks:214:14)\n    at invokeCallback (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\raw-body\\index.js:238:16)\n    at done (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\raw-body\\index.js:227:7)\n    at IncomingMessage.onEnd (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\raw-body\\index.js:287:7)", "trace": "@pytest.fixture(scope=\"function\")\n    def driver():\n        config = LocalConfig()\n    \n        opts = UiAutomator2Options()\n        opts.set_capability(\"platformName\", config.PLATFORM_NAME)\n        opts.set_capability(\"automationName\", config.AUTOMATION_NAME)\n        opts.set_capability(\"deviceName\", config.DEVICE_NAME)\n        opts.set_capability(\"platformVersion\", config.PLATFORM_VERSION)\n        opts.set_capability(\"app\", config.APP_PATH)\n        opts.set_capability(\"appPackage\", config.APP_PACKAGE)\n        opts.set_capability(\"appActivity\", config.APP_ACTIVITY)\n        opts.set_capability(\"noReset\", config.NO_RESET)\n        opts.set_capability(\"autoGrantPermissions\", config.AUTO_GRANT_PERMISSIONS)\n        opts.set_capability(\"newCommandTimeout\", config.NEW_COMMAND_TIMEOUT)\n    \n        command_executor = f\"http://{config.APPIUM_HOST}:{config.APPIUM_PORT}/wd/hub\"\n    \n>       driver_instance = Remote(command_executor=command_executor, options=opts)  # âœ…\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nconftest.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:249: in __init__\n    super().__init__(\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:263: in __init__\n    self.start_session(capabilities)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:342: in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, w3c_caps)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000027202B7CC20>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"unknown command\",\"message\":\"The requested resource could not be found, or...\\Users\\\\\\\\pc\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\raw-body\\\\\\\\index.js:287:7)\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\") if isinstance(message, dict) else None\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource.\nE       Stacktrace:\nE       UnknownCommandError: The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource.\nE           at catch404Handler (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\express\\middleware.js:139:49)\nE           at Layer.handleRequest (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\lib\\layer.js:152:17)\nE           at next (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\lib\\route.js:157:13)\nE           at Route.dispatch (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\lib\\route.js:117:3)\nE           at handle (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:435:11)\nE           at Layer.handleRequest (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\lib\\layer.js:152:17)\nE           at C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:295:15\nE           at param (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:600:14)\nE           at param (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:610:14)\nE           at processParams (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:664:3)\nE           at next (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:291:5)\nE           at logger (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\morgan\\index.js:144:5)\nE           at Layer.handleRequest (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\lib\\layer.js:152:17)\nE           at trimPrefix (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:342:13)\nE           at C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:297:9\nE           at processParams (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:582:12)\nE           at next (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\router\\index.js:291:5)\nE           at C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\body-parser\\lib\\read.js:132:5\nE           at AsyncResource.runInAsyncScope (node:async_hooks:214:14)\nE           at invokeCallback (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\raw-body\\index.js:238:16)\nE           at done (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\raw-body\\index.js:227:7)\nE           at IncomingMessage.onEnd (C:\\Users\\pc\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\raw-body\\index.js:287:7)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "parameters": [{"name": "user", "value": "{'email': 'derly+qa02@vitawallet.io', 'password': 'vitawallet'}"}], "start": 1759482256441, "stop": 1759482256441, "uuid": "ea1e6333-2ed8-4dfd-b21d-e387f5a81cb6", "historyId": "cb43fbe24d4c7dde0fd229d0182b8b9e", "testCaseId": "851f638a1293a2d1aa1b69497a224bb7", "fullName": "tests.test_sample#test_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_sample"}, {"name": "host", "value": "DESKTOP-USD8UUS"}, {"name": "thread", "value": "9228-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_sample"}], "titlePath": ["tests", "test_sample.py"]}